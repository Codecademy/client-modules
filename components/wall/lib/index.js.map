{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;sBAAc,QAAQ;;;;2BACJ,cAAc;;;;qBACd,SAAS;;;;0BAEZ,YAAY;;;;;;AAG3B,IAAI,IAAI,GAAG,yBAAM,WAAW,CAAC;;;AAC3B,QAAM,EAAE,CAAC,cAAc,CAAC;;AAExB,WAAS,EAAE;AACT,YAAQ,EAAE,yBAAM,SAAS,CAAC,SAAS,CAAC,CAClC,yBAAM,SAAS,CAAC,OAAO,CAAC,yBAAM,SAAS,CAAC,OAAO,CAAC,EAChD,yBAAM,SAAS,CAAC,OAAO,CACxB,CAAC;AACF,QAAI,EAAE,yBAAM,SAAS,CAAC,MAAM;AAC5B,WAAO,EAAE,yBAAM,SAAS,CAAC,IAAI;AAC7B,oBAAgB,EAAE,yBAAM,SAAS,CAAC,IAAI;AACtC,WAAO,EAAE,yBAAM,SAAS,CAAC,IAAI;AAC7B,SAAK,EAAE,yBAAM,SAAS,CAAC,MAAM;AAC7B,UAAM,EAAE,yBAAM,SAAS,CAAC,MAAM;GAC/B;;AAED,oBAAkB,EAAA,8BAAG;AACnB,QAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,oBAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AACpE,UAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;KACtB;GACF;;AAED,QAAM,EAAA,kBAAG;;;AAEP,QAAI,WAAW,GAAG;AAChB,gBAAU,EAAE,IAAI;2CACF,IAAI,CAAC,KAAK,CAAC,IAAI,EAAK,IAAI,CAAC,KAAK,CAAC,IAAI,wBACjD,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,QACpD,CAAC;;AAEH,QAAI,UAAU,GAAG,EAAE,CAAC;AACpB,QAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;AAC1D,QAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;;AAE7D,WACE;;QAAO,cAAc,EAAE,IAAI,CAAC,kBAAkB,AAAC;MAC7C;;UAAK,SAAS,EAAE,WAAW,AAAC,EAAC,KAAK,EAAE,UAAU,AAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ;OACf;KACA,CACR;GACH;CACF,CAAC,CAAC;;qBAEY,IAAI","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport React from 'react/addons';\nimport Modal from './modal';\n\nimport cx from 'classnames';\n\n// Reusable class for 'walls' in the LE.\nvar Wall = React.createClass({\n  mixins: [KeyboardEvents],\n\n  propTypes: {\n    children: React.PropTypes.oneOfType([\n      React.PropTypes.arrayOf(React.PropTypes.element),\n      React.PropTypes.element\n    ]),\n    type: React.PropTypes.string,\n    dismiss: React.PropTypes.func,\n    responseRequired: React.PropTypes.bool,\n    padding: React.PropTypes.bool,\n    width: React.PropTypes.string,\n    height: React.PropTypes.string,\n  },\n\n  closeIfNotRequired() {\n    if (!this.props.responseRequired && _.isFunction(this.props.dismiss)) {\n      this.props.dismiss();\n    }\n  },\n\n  render() {\n\n    let wallClasses = cx({\n      'fcn-wall': true,\n      [`fcn-wall--${this.props.type}`]: this.props.type,\n      'fcn-wall--no-padding': this.props.padding === false\n    });\n\n    let wallStyles = {};\n    if (this.props.width) wallStyles.width = this.props.width;\n    if (this.props.height) wallStyles.height = this.props.height;\n\n    return (\n      <Modal onOutsideClick={this.closeIfNotRequired}>\n        <div className={wallClasses} style={wallStyles}>\n         {this.props.children}\n        </div>\n      </Modal>\n    );\n  }\n});\n\nexport default Wall;\n"]}