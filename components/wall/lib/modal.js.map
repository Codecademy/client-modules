{"version":3,"sources":["../src/modal.js"],"names":[],"mappings":";;;;;;;;;;sBAAc,QAAQ;;;;2BACJ,cAAc;;;;qCACE,yBAAyB;;;;0BAE5C,YAAY;;;;AAE3B,IAAM,YAAY,GAAG,CACnB,aAAa,CACd,CAAC;;AAEF,IAAI,KAAK,GAAG,yBAAM,WAAW,CAAC;;;AAC5B,QAAM,EAAE,oCAAuB;;AAE/B,WAAS,EAAE;AACT,YAAQ,EAAE,yBAAM,SAAS,CAAC,SAAS,CAAC,CAClC,yBAAM,SAAS,CAAC,OAAO,CAAC,yBAAM,SAAS,CAAC,OAAO,CAAC,EAChD,yBAAM,SAAS,CAAC,OAAO,CACxB,CAAC;AACF,kBAAc,EAAE,yBAAM,SAAS,CAAC,IAAI;AACpC,eAAW,EAAE,yBAAM,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC;GACjD;;AAED,mBAAiB,EAAA,6BAAG;AAClB,YAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;GACrD;;AAED,sBAAoB,EAAA,gCAAG;AACrB,YAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;GACxD;;AAED,iBAAe,EAAA,2BAAG;AAChB,WAAO;AACL,oBAAc,EAAE,oBAAE,IAAI;KACvB,CAAC;GACH;;;AAGD,gBAAc,EAAA,wBAAC,CAAC,EAAE;AAChB,KAAC,CAAC,eAAe,EAAE,CAAC;GACrB;;AAED,gBAAc,EAAA,0BAAG;AACf,QAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;GAC7B;;AAED,aAAW,EAAA,uBAAG;AACZ,QAAI,cAAc,GAAG;AACnB,oBAAc,EAAE,IAAI;0BACF,IAAI,CAAC,KAAK,CAAC,WAAW,EAAM,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EACjG,CAAC;;AAEH,WACE;;QAAK,SAAS,EAAE,cAAc,AAAC,EAAC,OAAO,EAAE,IAAI,CAAC,cAAc,AAAC;MAC3D;;UAAK,SAAS,EAAC,uBAAuB,EAAC,OAAO,EAAE,IAAI,CAAC,cAAc,AAAC;QACjE,IAAI,CAAC,KAAK,CAAC,QAAQ;OAChB;KACF,CACN;GACH;;;AAGD,QAAM,EAAA,kBAAG;AACP,WAAO,IAAI,CAAC;GACb;;CAEF,CAAC,CAAC;;qBAEY,KAAK","file":"modal.js","sourcesContent":["import _ from 'lodash';\nimport React from 'react/addons';\nimport layeredComponentMixin from './LayeredComponentMixin';\n\nimport cx from 'classnames';\n\nconst overlayTypes = [\n  'transparent'\n];\n\nvar Modal = React.createClass({\n  mixins: [layeredComponentMixin],\n\n  propTypes: {\n    children: React.PropTypes.oneOfType([\n      React.PropTypes.arrayOf(React.PropTypes.element),\n      React.PropTypes.element\n    ]),\n    onOutsideClick: React.PropTypes.func,\n    overlayType: React.PropTypes.oneOf(overlayTypes)\n  },\n\n  componentDidMount() {\n    document.body.classList.add('modal-overlay-active');\n  },\n\n  componentWillUnmount() {\n    document.body.classList.remove('modal-overlay-active');\n  },\n\n  getDefaultProps() {\n    return {\n      onOutsideClick: _.noop\n    };\n  },\n\n  // stop clicks on the content from triggering onOverlayClick\n  onContentClick(e) {\n    e.stopPropagation();\n  },\n\n  onOverlayClick() {\n    this.props.onOutsideClick();\n  },\n\n  renderLayer() {\n    let overlayClasses = cx({\n      'ModalOverlay': true,\n      [`ModalOverlay--${this.props.overlayType}`]: (overlayTypes.indexOf(this.props.overlayType) !== -1)\n    });\n\n    return (\n      <div className={overlayClasses} onClick={this.onOverlayClick}>\n        <div className='ModalOverlay__content' onClick={this.onContentClick}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  },\n\n  // render is a noop, modal is rendered through renderLayer.\n  render() {\n    return null;\n  }\n\n});\n\nexport default Modal;\n"]}